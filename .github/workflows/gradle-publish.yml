name: Build & Release Plugin Loup-Garou

on:
  push:
    branches: [ "main", "master", "develop" ]
  workflow_dispatch:  # permet de lancer manuellement

jobs:
  build:
    name: Build et Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: üîß Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: üèóÔ∏è Build with Gradle
        run: ./gradlew build --no-daemon

      - name: üìã List build artifacts
        run: ls -la build/libs/

      - name: üì§ Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: LoupGarou-Plugin
          path: build/libs/*.jar
          retention-days: 30

      - name: üß™ Run tests
        run: ./gradlew test --no-daemon
        continue-on-error: true

      - name: üìä Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: build/test-results/
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # n√©cessaire pour r√©cup√©rer tous les tags

      - name: ‚òï Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: üßÆ Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: üî¢ Bump patch version
        id: bump
        run: |
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          patch=$((patch+1))
          new_tag="$major.$minor.$patch"
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: üìå Set next version
        id: version
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Last tag: $LAST_TAG"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_TAG"
          PATCH=$((PATCH + 1))
          NEXT_TAG="$MAJOR.$MINOR.$PATCH"
          echo "Next tag: $NEXT_TAG"
          git tag $NEXT_TAG
          git push origin $NEXT_TAG
          echo "GITHUB_TAG=$NEXT_TAG" >> $GITHUB_ENV

      - name: üß© Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: üìù Generate Changelog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "# Changelog Loup-Garou" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for release ${{ env.new_tag }}" || echo "No changes to commit"
          git push origin main

      - name: üèóÔ∏è Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build --no-daemon
        env:
          GITHUB_TAG: ${{ env.GITHUB_TAG }}

      - name: üì• Download artifact
        uses: actions/download-artifact@v4
        with:
          name: LoupGarou-Plugin

      - name: üöÄ Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          tag_name: ${{ env.GITHUB_TAG }}
          name: Release ${{ env.GITHUB_TAG }}
          body: |
            ## üê∫ Plugin Loup-Garou ${{ env.new_tag }}
            
            ### üì• Installation
            1. T√©l√©chargez le fichier `.jar` ci-dessous
            2. Placez-le dans le dossier `plugins/` de votre serveur
            3. Red√©marrez le serveur
            4. Utilisez `/lg aide` pour commencer !
            
            ### ‚ú® Changements
            Voir le [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
            
            ### üåç Compatibilit√©
            - Minecraft 1.21.8+
            - Spigot/Paper
            - Java 21+
            
            ### üìñ Documentation
            [Wiki](https://github.com/${{ github.repository }}/wiki) ‚Ä¢ [Discord](https://discord.gg/DGeGB5cmxQ)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
